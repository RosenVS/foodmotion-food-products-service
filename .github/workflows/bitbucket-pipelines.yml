name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: root-fort-412616 # TODO: update Google Cloud project id
  APP_NAME: foodmotion-food-products-service # TODO: update Artifact Registry location
  SER_NAME: foodmotion-food-products-service # TODO: update Artifact Registry location
  REGION: europe-west1 # TODO: update Cloud Run service region
  SER_PORT: 8080 # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      # NOTE: Alternative option - authentication via credentials json
      # - name: Google Auth
      #   id: auth
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}''

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      - name: Build Image, Push to Registry, Deploy to Cloud Run
        run: |
          export IMAGE_NAME=europe-west1-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.APP_NAME}}/${{env.SER_NAME}}:$GITHUB_SHA
          echo "${KEY_FILE}" > client-secret.json
          gcloud auth activate-service-account ${{env.PROJECT_ID}}@appspot.gserviceaccount.com --key-file ${{env.PROJECT_ID}}-3f48ad93aa23.json
          gcloud config set project ${{env.PROJECT_ID}}
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          export DOCKER_BUILDKIT=0
          
          cd food-products-service
          mvn test
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          gcloud run deploy ${{env.SER_NAME}} --image $IMAGE_NAME --port ${{env.SER_PORT}} --region ${{env.REGION}} --cpu=2 --vpc-connector=default --vpc-egress=private-ranges-only --memory=8Gi --timeout=3000 --allow-unauthenticated || true


# name: Build and Deploy to Cloud Run

# on:
#   push:
#     branches: [ "main" ]

# env:
#   PROJECT_ID: root-fort-412616 # TODO: update Google Cloud project id
#   APP_NAME: foodmotion-food-products-service # TODO: update Artifact Registry location
#   SER_NAME: foodmotion-food-products-service # TODO: update Artifact Registry location
#   REGION: europe-west1 # TODO: update Cloud Run service region
#   SER_PORT: 8080 # TODO: update Cloud Run service region

# jobs:
#   deploy:
#     permissions:
#       contents: 'read'
#       id-token: 'write'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
      
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'temurin'
      
#       # Authenticate with Google Cloud
#       - name: Authenticate with Google Cloud
#         uses: google-github-actions/auth@v0
#         with:
#           credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      
#       # Configure Docker to use the gcloud command-line tool as a credential helper
#       - name: Configure Docker
#         run: |
#           gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

#       # Maven Test
#       - name: Run Maven Test
#         run: |
#           cd food-products-service
#           mvn test
      
#       # Build the Docker image
#       - name: Build Docker Image
#         run: |
#           export IMAGE_NAME=europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SER_NAME }}:$GITHUB_SHA
#           cd food-products-service
#           docker build -t $IMAGE_NAME .
      
#       # Push the Docker image to Google Artifact Registry
#       - name: Push Docker Image
#         run: |
#           export IMAGE_NAME=europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SER_NAME }}:$GITHUB_SHA
#           docker push $IMAGE_NAME
      
#       # Deploy to Cloud Run
#       - name: Deploy to Cloud Run
#         run: |
#           export IMAGE_NAME=europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SER_NAME }}:$GITHUB_SHA
#           gcloud run deploy ${{ env.SER_NAME }} --image $IMAGE_NAME --port ${{ env.SER_PORT }} --region ${{ env.REGION }} --cpu=2 --vpc-connector=default --memory=8Gi --timeout=3000 --allow-unauthenticated || true